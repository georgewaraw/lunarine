THREE.EffectComposer=function(e,r){if(this.renderer=e,void 0===r){var s={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1},t=e.getDrawingBufferSize(new THREE.Vector2);(r=new THREE.WebGLRenderTarget(t.width,t.height,s)).texture.name="EffectComposer.rt1"}this.renderTarget1=r,this.renderTarget2=r.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),void 0===THREE.ShaderPass&&console.error("THREE.EffectComposer relies on THREE.ShaderPass"),this.copyPass=new THREE.ShaderPass(THREE.CopyShader),this._previousFrameTime=Date.now()},Object.assign(THREE.EffectComposer.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e);var r=this.renderer.getDrawingBufferSize(new THREE.Vector2);e.setSize(r.width,r.height)},insertPass:function(e,r){this.passes.splice(r,0,e)},isLastEnabledPass:function(e){for(var r=e+1;r<this.passes.length;r++)if(this.passes[r].enabled)return!1;return!0},render:function(e){void 0===e&&(e=.001*(Date.now()-this._previousFrameTime)),this._previousFrameTime=Date.now();var r,s,t=this.renderer.getRenderTarget(),i=!1,n=this.passes.length;for(s=0;s<n;s++)if(!1!==(r=this.passes[s]).enabled){if(r.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(s),r.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),r.needsSwap){if(i){var a=this.renderer.context;a.stencilFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),a.stencilFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==THREE.MaskPass&&(r instanceof THREE.MaskPass?i=!0:r instanceof THREE.ClearMaskPass&&(i=!1))}this.renderer.setRenderTarget(t)},reset:function(e){if(void 0===e){var r=this.renderer.getDrawingBufferSize(new THREE.Vector2);(e=this.renderTarget1.clone()).setSize(r.width,r.height)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,r){this.renderTarget1.setSize(e,r),this.renderTarget2.setSize(e,r);for(var s=0;s<this.passes.length;s++)this.passes[s].setSize(e,r)}}),THREE.Pass=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1},Object.assign(THREE.Pass.prototype,{setSize:function(e,r){},render:function(e,r,s,t,i){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),THREE.Pass.FullScreenQuad=function(){var e=new THREE.OrthographicCamera(-1,1,1,-1,0,1),r=new THREE.PlaneBufferGeometry(2,2),s=function(e){this._mesh=new THREE.Mesh(r,e)};return Object.defineProperty(s.prototype,"material",{get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}),Object.assign(s.prototype,{render:function(r){r.render(this._mesh,e)}}),s}();