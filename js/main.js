const random=(e,t)=>Math.floor(Math.random()*(t-e)+e),map=(e,t,r,n,i)=>(e-t)*(i-n)/(r-t)+n,color=e=>{let t=10;switch(e){case"bright":t*=2;case"normal":t*=2;case"dark":t*=2}return`hsl(${random(0,360)}, ${random(0,101)}%, ${t}%)`};function Game(){const e=color("bright");let t=0;this.renderer=new THREE.WebGLRenderer({canvas:document.getElementsByTagName("canvas")[0]}),this.renderer.setPixelRatio(.2),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setClearColor(e),this.renderer.shadowMap.enabled=!0,this.scene=new THREE.Scene,this.scene.fog=new THREE.FogExp2(e,.075),this.camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.set(0,10,7.5),this.scene.add(this.camera),this.pass=new THREE.Post,this.pass.renderToScreen=!0,this.composer=new THREE.EffectComposer(this.renderer),this.composer.addPass(new THREE.RenderPass(this.scene,this.camera)),this.composer.addPass(this.pass),this.running=!1,this.begin=(()=>{t?(this.running=!0,material.groundL.opacity=1,material.groundR.opacity=1,material.tree.opacity=.75,game.scene.remove(score.mesh),game.scene.add(mesh.enemy),mesh.animation.forEach(e=>e.start())):(t++,audio=new Audio,new TWEEN.Tween(material.text).to({opacity:0},1).easing(TWEEN.Easing.Quadratic.Out).onComplete(()=>{game.scene.remove(title.mesh),game.scene.add(instructions.mesh),new TWEEN.Tween(material.text).to({opacity:.75},1).easing(TWEEN.Easing.Quadratic.Out).onComplete(()=>{this.running=!0,material.groundL.opacity=1,material.groundR.opacity=1,material.tree.opacity=.75,game.scene.remove(instructions.mesh),game.scene.add(mesh.enemy),mesh.animation.forEach(e=>e.start())}).start()}).start())}),this.end=(()=>{this.running=!1,material.groundL.opacity=.25,material.groundR.opacity=.25,material.tree.opacity=.25,material.text.opacity=.75,shader.tree.uniforms.uDistort.value=.75,score=new Text(`SCORE:${("00000"+Math.round(player.score)).slice(-5)}`,new THREE.Vector3(-.3,10.1,6.25)),game.scene.remove(mesh.enemy),mesh.animation.forEach(e=>e.stop()),player.is="center",player.score=0,game.camera.position.x=0,game.pass.shader.uniforms.uAmount.value=.75,mesh.groundL.rotation.x=0,mesh.groundR.rotation.x=0,mesh.tree.rotation.x=0,mesh.enemy.position.y=12.5,mesh.enemy.rotation.y=0}),this.time=0,window.onorientationchange=(()=>location.reload()),window.onresize=(()=>{this.renderer.setPixelRatio(.2),this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.pass.setSize(window.innerWidth,window.innerHeight),this.composer.reset()})}function Light(){const e=color("bright");this.ambient=new THREE.AmbientLight(e,.5),game.scene.add(this.ambient),this.point=new THREE.PointLight(e,.5,100),this.point.position.set(5,5,5),this.point.castShadow=!0,this.point.shadow.mapSize=new THREE.Vector2(512,512),game.camera.add(this.point)}function Geometry(){const e=new THREE.Color(color("bright")),t=new THREE.Color(color("dark"));this.groundL=new THREE.SphereGeometry(10,24,24),this.groundL.vertices.forEach(e=>e.y=Math.max(e.y,0)),this.groundL.faces.forEach((r,n)=>r.color=n%2?e:t),this.groundR=new THREE.SphereGeometry(10,24,24),this.groundR.vertices.forEach(e=>e.y=Math.min(e.y,0)),this.groundR.faces.forEach((r,n)=>r.color=n%2?e:t),this.tree=new THREE.Geometry,this.groundL.faces.forEach((e,t)=>{if(!(t%20)){const t=new THREE.CylinderGeometry(0,.25,5);t.rotateX(90*Math.PI/180),t.lookAt(e.normal),t.translate(10*e.normal.x,10*e.normal.y,10*e.normal.z),this.tree.merge(t)}}),this.enemy=new THREE.OctahedronBufferGeometry(1),this.snow=new THREE.Geometry;for(let e=1e3;e--;)this.snow.vertices.push(new THREE.Vector3(Math.random(),Math.random(),Math.random()))}function Material(){const e=color("bright");this.groundL=new THREE.MeshLambertMaterial({transparent:!0,opacity:.25,vertexColors:THREE.FaceColors}),this.groundR=new THREE.MeshLambertMaterial({transparent:!0,opacity:.25,vertexColors:THREE.FaceColors}),this.tree=new THREE.MeshLambertMaterial({side:THREE.DoubleSide,depthWrite:!1,transparent:!0,opacity:.25,color:color("bright")}),this.enemy=new THREE.MeshLambertMaterial({transparent:!0,opacity:.75,color:e}),this.snow=new THREE.PointsMaterial({size:.01,depthWrite:!1,transparent:!0,opacity:.25,color:color("normal")}),this.text=new THREE.MeshLambertMaterial({transparent:!0,opacity:.75,color:color("dark")})}function Shader(){const e="\n    uniform float uTime;\n    uniform float uMorph;\n    uniform float uDistort;\n  ",t="\n    vec3 transformed = vec3(position);\n\n    transformed.x += sin((position.x + uTime * .375) * 20.) * .0015 * uMorph;\n    transformed.y += sin((position.y + uTime * .375) * 20.) * .0015 * uMorph;\n    transformed.z += sin((position.z + uTime * .375) * 20.) * .0015 * uMorph;\n\n    if (uDistort > 0.) {\n      transformed.x += fract(sin(dot(position.x + uTime * .00000025, (12.9898, 78.233))) * 43758.5453123) * uDistort;\n      transformed.y += fract(sin(dot(position.x + uTime * .00000025, (12.9898, 78.233))) * 43758.5453123) * uDistort;\n      transformed.z += fract(sin(dot(position.x + uTime * .00000025, (12.9898, 78.233))) * 43758.5453123) * uDistort;\n    }\n  ";this.uTime=[],material.groundL.onBeforeCompile=(r=>{this.groundL=r,this.uTime.push(r.uniforms.uTime={value:0}),r.uniforms.uMorph={value:10},r.uniforms.uDistort={value:.1},r.vertexShader=e+r.vertexShader,r.vertexShader=r.vertexShader.replace("#include <begin_vertex>",t.substring(0,t.indexOf(";")+1)+"\n        transformed.y *= 2.;\n      "+t.substring(t.indexOf(";")+1))}),material.groundR.onBeforeCompile=(r=>{this.groundR=r,this.uTime.push(r.uniforms.uTime={value:0}),r.uniforms.uMorph={value:10},r.uniforms.uDistort={value:.1},r.vertexShader=e+r.vertexShader,r.vertexShader=r.vertexShader.replace("#include <begin_vertex>",t.substring(0,t.indexOf(";")+1)+"\n        transformed.y *= 2.;\n      "+t.substring(t.indexOf(";")+1))}),material.tree.onBeforeCompile=(r=>{this.tree=r,this.uTime.push(r.uniforms.uTime={value:0}),r.uniforms.uMorph={value:10},r.uniforms.uDistort={value:.75},r.vertexShader=e+r.vertexShader,r.vertexShader=r.vertexShader.replace("#include <begin_vertex>",t)}),material.enemy.onBeforeCompile=(r=>{this.enemy=r,this.uTime.push(r.uniforms.uTime={value:0}),r.uniforms.uMorph={value:20},r.uniforms.uDistort={value:1},r.vertexShader=e+r.vertexShader,r.vertexShader=r.vertexShader.replace("#include <begin_vertex>",t.substring(0,t.indexOf(";")+1)+"\n        transformed.x *= .75;\n        transformed.y *= 1.5;\n        transformed.z *= .75;\n      "+t.substring(t.indexOf(";")+1))}),material.snow.onBeforeCompile=(r=>{this.snow=r,this.uTime.push(r.uniforms.uTime={value:0}),r.uniforms.uMorph={value:10},r.uniforms.uDistort={value:1},r.vertexShader=e+r.vertexShader,r.vertexShader=r.vertexShader.replace("#include <begin_vertex>",t)}),material.text.onBeforeCompile=(r=>{this.text=r,this.uTime.push(r.uniforms.uTime={value:0}),r.uniforms.uMorph={value:.75},r.uniforms.uDistort={value:.001},r.vertexShader=e+r.vertexShader,r.vertexShader=r.vertexShader.replace("#include <begin_vertex>",t)}),this.distort="left"}function Mesh(){this.animation=[],this.groundL=new THREE.Mesh(geometry.groundL,material.groundL),this.groundL.receiveShadow=!0,this.groundL.rotation.set(0,0,90*Math.PI/180),game.scene.add(this.groundL),this.animation.push(new TWEEN.Tween(this.groundL.rotation).to({x:360*Math.PI/180},1e4).repeat(1/0)),this.groundR=new THREE.Mesh(geometry.groundR,material.groundR),this.groundR.receiveShadow=!0,this.groundR.rotation.set(0,0,90*Math.PI/180),game.scene.add(this.groundR),this.animation.push(new TWEEN.Tween(this.groundR.rotation).to({x:360*Math.PI/180},1e4).repeat(1/0)),this.tree=new THREE.Mesh(geometry.tree,material.tree),this.tree.castShadow=!0,game.scene.add(this.tree),this.animation.push(new TWEEN.Tween(this.tree.rotation).to({x:360*Math.PI/180},1e4).repeat(1/0)),this.enemy=new THREE.Mesh(geometry.enemy,material.enemy),this.enemy.castShadow=!0,this.enemy.position.set(-1.5,12.5,-12.5),this.animation.push(new TWEEN.Tween(this.enemy.position).to({y:[12,13,12.5]},1e4).repeat(1/0)),this.animation.push(new TWEEN.Tween(this.enemy.rotation).to({y:360*Math.PI/180},1e4).repeat(1/0)),this.snow=new THREE.Points(geometry.snow,material.snow),game.scene.add(this.snow);const e=new TWEEN.Tween(this.enemy.position).to({x:-1.5},5e3).easing(TWEEN.Easing.Quadratic.In).onComplete(()=>shader.distort="left"),t=new TWEEN.Tween(this.enemy.position).to({x:1.5},5e3).easing(TWEEN.Easing.Quadratic.In).onComplete(()=>shader.distort="right"),r=(new TWEEN.Tween).to({},5e3),n=(new TWEEN.Tween).to({},5e3),i=()=>{random(0,5)||("left"===shader.distort?t.start():e.start())};r.onComplete(()=>{i(),n.start()}).start(),n.onComplete(()=>{i(),r.start()}).start()}function Text(e,t,r=!0){(new THREE.FontLoader).load("json/VT323_Regular.json",n=>{this.mesh=new THREE.Mesh(new THREE.TextBufferGeometry(e,{font:n,size:.1,height:.01}),material.text),this.mesh.position.copy(t),r&&game.scene.add(this.mesh)})}function Player(){let e=!1;this.is="center";const t=new TWEEN.Tween(game.camera.position).to({x:-1.5},250).easing(TWEEN.Easing.Quadratic.Out).onComplete(()=>e=!1),r=new TWEEN.Tween(game.camera.position).to({x:1.5},250).easing(TWEEN.Easing.Quadratic.Out).onComplete(()=>e=!1),n=n=>{if(!e)switch(n){case"left":"left"!==this.is&&(e=!0,this.is="left",t.start());break;case"right":"right"!==this.is&&(e=!0,this.is="right",r.start())}};let i,a,o,s;window.onkeydown=(e=>{if(game.running)switch(e.code){case"ArrowLeft":case"KeyA":n("left");break;case"ArrowRight":case"KeyD":n("right")}else game.begin()}),window.ontouchstart=(e=>{i=e.changedTouches[0].clientX/window.innerWidth*2-1,a=e.changedTouches[0].clientY/window.innerHeight*-2+1,game.running||game.begin()}),window.ontouchend=(e=>{o=e.changedTouches[0].clientX/window.innerWidth*2-1,s=e.changedTouches[0].clientY/window.innerHeight*-2+1,Math.abs(a-s)<.25&&i-o<-.25?n("left"):Math.abs(a-s)<.25&&i-o>.25&&n("right")}),document.getElementsByTagName("canvas")[0].ontouchstart=(e=>e.preventDefault()),this.score=0}function Audio(){const e=new THREE.AudioListener;game.camera.add(e);const t=new THREE.AudioLoader;this.s=new THREE.Audio(e),t.load("mp3/audio.mp3",e=>{this.s.setBuffer(e),this.s.setLoop(!0),this.s.play()}),this.analyser=new THREE.AudioAnalyser(this.s)}let game,light,geometry,material,shader,mesh,title,instructions,animation,audio,score;function initialize(){game=new Game,light=new Light,geometry=new Geometry,material=new Material,shader=new Shader,mesh=new Mesh,title=new Text(" waraws\nLUNARINE",new THREE.Vector3(-.225,10.1,6.25)),instructions=new Text("PRESSad<--\x3e\n\n   AVOID\n DISTORTED\n   AREAS\n\nSWIPEriglef",new THREE.Vector3(-.3,10.5125,5.75),!1),player=new Player,animate()}function animate(e){if(requestAnimationFrame(animate),TWEEN.update(),game.time=.001*e,mesh.snow.position.set(game.camera.position.x-.5,game.camera.position.y-.5,6.5),game.running){const e=map(audio.analyser.getFrequencyData()[0],0,255,.1,2);"left"===shader.distort?(shader.groundL&&(shader.groundL.uniforms.uDistort.value=2*e),shader.groundR&&(shader.groundR.uniforms.uDistort.value=.1),"left"===player.is&&shader.groundL.uniforms.uDistort.value>.2?(console.log("damage"),game.pass.shader.uniforms.uAmount.value<1?game.pass.shader.uniforms.uAmount.value+=.0025:game.pass.shader.uniforms.uAmount.value=1):"right"===player.is&&(game.pass.shader.uniforms.uAmount.value>.75?game.pass.shader.uniforms.uAmount.value-=.0025:game.pass.shader.uniforms.uAmount.value=.75)):(shader.groundL&&(shader.groundL.uniforms.uDistort.value=.1),shader.groundR&&(shader.groundR.uniforms.uDistort.value=2*e),"right"===player.is&&shader.groundR.uniforms.uDistort.value>.2?(console.log("damage"),game.pass.shader.uniforms.uAmount.value<1?game.pass.shader.uniforms.uAmount.value+=.0025:game.pass.shader.uniforms.uAmount.value=1):"left"===player.is&&(game.pass.shader.uniforms.uAmount.value>.75?game.pass.shader.uniforms.uAmount.value-=.0025:game.pass.shader.uniforms.uAmount.value=.75)),shader.tree&&(shader.tree.uniforms.uDistort.value=e),shader.enemy&&(shader.enemy.uniforms.uDistort.value=1.25*e),shader.snow&&(shader.snow.uniforms.uDistort.value=e),"center"!==player.is&&(player.score+=.01)}shader.uTime.forEach(e=>e.value=game.time),game.pass.shader.uniforms.uTime.value=game.time,game.composer.render()}