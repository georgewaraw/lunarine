THREE.Post=function(){THREE.Pass.call(this),this.textureComp=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),this.textureOld=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),this.shader=new THREE.ShaderMaterial({uniforms:{tOld:{value:null},tNew:{value:null},uAmount:{value:.75},uTime:{value:0}},vertexShader:"\n      varying vec2 vUv;\n\n      void main() {\n        vUv = uv;\n\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n      }\n    ",fragmentShader:"\n      uniform sampler2D tOld;\n      uniform sampler2D tNew;\n      uniform float uAmount;\n      uniform float uTime;\n\n      varying vec2 vUv;\n\n      void main() {\n        vec4 a = max(texture2D(tNew, vUv), texture2D(tOld, vUv) * max(sign(texture2D(tOld, vUv) - .1), .0) * uAmount);\n        vec4 b = a * .95 + fract(sin(dot(vUv * (sin(uTime) + 10.), vec2(12.9898, 78.233))) * 43758.5453123) * .05;\n        vec4 c = vec4(b.r, (b.g + b.b) * .5, (b.g + b.b) * .5, 1.);\n        gl_FragColor = c;\n      }\n    "}),this.compFsQuad=new THREE.Pass.FullScreenQuad(this.shader),this.copyFsQuad=new THREE.Pass.FullScreenQuad(new THREE.MeshBasicMaterial)},THREE.Post.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.Post,render:function(e,t,r){this.shader.uniforms.tOld.value=this.textureOld.texture,this.shader.uniforms.tNew.value=r.texture,e.setRenderTarget(this.textureComp),this.compFsQuad.render(e),this.copyFsQuad.material.map=this.textureComp.texture,this.renderToScreen?(e.setRenderTarget(null),this.copyFsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this.copyFsQuad.render(e));const n=this.textureOld;this.textureOld=this.textureComp,this.textureComp=n},setSize:function(e,t){this.textureComp.setSize(e,t),this.textureOld.setSize(e,t)}});