THREE.Post=function(){THREE.Pass.call(this),this.textureComp=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),this.textureOld=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),this.shaderMaterial=new THREE.ShaderMaterial({uniforms:{tOld:{value:null},tNew:{value:null},uTime:{value:0}},vertexShader:"\n\t\t\tvarying vec2 vUv;\n\t\n\t\t\tvoid main() {\n\t\t\t\tvUv = uv;\n\t\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n\t\t\t}\n\t\t",fragmentShader:"\n\t\t\tuniform sampler2D tOld;\n\t\t\tuniform sampler2D tNew;\n\t\t\tuniform float uTime;\n\t\n\t\t\tvarying vec2 vUv;\n\t\n\t\t\tvoid main() {\n\t\t\t\tvec4 a = max(texture2D(tNew, vUv), texture2D(tOld, vUv) * max(sign(texture2D(tOld, vUv) - .1), .0) * .6);\n\t\t\t\tvec4 b = a * .95 + fract(sin(dot(vUv * (sin(uTime) + 10.), vec2(12.9898, 78.233))) * 43758.5453123) * .05; \n\t\t\t\tvec4 c = vec4(b.r, (b.g + b.b) * .5, (b.g + b.b) * .5, 1.);\n\t\t\t\tgl_FragColor = c;\n\t\t\t}\n\t\t"}),this.compFsQuad=new THREE.Pass.FullScreenQuad(this.shaderMaterial);var t=new THREE.MeshBasicMaterial;this.copyFsQuad=new THREE.Pass.FullScreenQuad(t)},THREE.Post.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.Post,render:function(t,e,r){this.shaderMaterial.uniforms.tOld.value=this.textureOld.texture,this.shaderMaterial.uniforms.tNew.value=r.texture,t.setRenderTarget(this.textureComp),this.compFsQuad.render(t),this.copyFsQuad.material.map=this.textureComp.texture,this.renderToScreen?(t.setRenderTarget(null),this.copyFsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(),this.copyFsQuad.render(t));var i=this.textureOld;this.textureOld=this.textureComp,this.textureComp=i},setSize:function(t,e){this.textureComp.setSize(t,e),this.textureOld.setSize(t,e)}});